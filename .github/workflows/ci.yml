name: CI

on: [push, pull_request]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'windows-latest', 'macOS-latest']
        python-version: ['3.7', '3.8']
    runs-on: ${{ matrix.os }}
    name: Test ${{ matrix.python-version }} ${{ matrix.os }} 
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64'
    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest flake8
        pip install pytest-qt pytest-cov
        npm install -g pyright
    - name: Compile UI
      run: |
        cd ImagingS/Gui/uic
        pwsh -c ./compile.ps1
    - name: Lint
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --exclude=.svn,CVS,.bzr,.hg,.git,__pycache__,.tox,.eggs,*.egg,_ui_*.py --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exclude=.svn,CVS,.bzr,.hg,.git,__pycache__,.tox,.eggs,*.egg,_ui_*.py --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Type check
      run: pyright
    - name: Test
      if: matrix.os != 'ubuntu-latest'
      run: pytest --cov=. --cov-report=html
    - name: Test without UI
      if: matrix.os == 'ubuntu-latest'
      run: pytest --ignore test/ui --cov=. --cov-report=html
    - name: Upload reports
      uses: actions/upload-artifact@v1
      with:
        name: test-${{ matrix.os }}-${{ matrix.python-version }}
        path: ./htmlcov